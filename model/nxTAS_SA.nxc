//
// Spectrometer TAS Standalone with the LEGO Mindstorms NXT.
//
// 2010, Institut Laue Langevin.




task main ()
{
	int i=0;
	int count_m = 1;   // Identifiant des moteurs 1 pour le moteur A, 2 pour le moteur B, et 3 pour le C

   
	int temp1=0;       // 1 si nous sommes dans un des menus moteur
	int temp1A=0;
	int menuM=0;       // 1 si nous sommes dans le selecteur d'angle du Monochromateur
	int menuA=0;       // 1 si nous sommes dans le selecteur d'angle dde l'analyseur
	int menuS=0;       // 1 si nous sommes dans le selecteur d'angle du sample
   
	float positionM = 0; //somme des angles pour le monochromateur rentrés depuis le lancement du programme
	float positionS = 0; //somme des angles pour le sample rentrés depuis le lancement du programme
	float positionA = 0; //somme des angles pour l'analyseur rentrés depuis le lancement du programme
   
	float angleM = 0;    // Monochromator angle
	float angleM_before = 0;
	float angleA = 0;   // Analyzer angle
	float angleA_before = 0;
	float angleS= 0;     //Sample angle
	float angleS_before= 0;
   
	float countmotor = 0;

float countmotorM = 0;

	//flag permettant de stoper des boucles
	int flag1=0 ;
	int flag11=0 ;
	int flag111=0 ;
	int flag1111=0 ;
	int flag2=0;
   
	int flag1A=0 ;
	int flag11A=0 ;
	int flag111A=0 ;
	int flag1111A=0 ;

	int flag3=0;
	int flag33=0;
	int flag33A=0;
	int flagA=0;
	int flag333=0;
	int flag4=0;
	int flag4A=0;
   
	int flagsortie=0;
	int flagsortie2=0;
   
	int flagsortieM=0;
	int flagsortieM2=0;

	int flagsortieA=0;
	int flagsortieA2=0;
   
	int flag_positionM=0;
	int flag_positionS=0;
	int flag_positionA=0;
   
	int flag_amort=0;
	int flag_amort2=0;
   
   
	int motor_a_now, motor_a_init, a;
	int motor_b_now, motor_b_init, b;
	int motor_c_now, motor_c_init, c;
   
	// positions initiales
	motor_a_init = MotorTachoCount (OUT_A);
	motor_a_now = motor_a_init;
   
	motor_b_init = MotorTachoCount (OUT_B);
	motor_b_now = motor_b_init;
   
	motor_c_init = MotorTachoCount (OUT_C);
	motor_c_now = motor_c_init;
   
SetSensorTouch(IN_1);      //Capteur de pression G branché sur le capteur 1
SetSensorTouch(IN_2);      //Capteur de prssion D branché sur le capteur 2
   
		while (true)
		{

		NumOut(20, LCD_LINE6, MotorTachoCount(OUT_A));
		NumOut(50, LCD_LINE6, flag_positionS);
       

		if(((MotorTachoCount(OUT_B)!=0)) && flag_amort==0 ){    //asservissement

		NumOut(80, LCD_LINE6, 1);
        
					for(i=1;i<3;i++){
						countmotor = - MotorTachoCount(OUT_B);
       					RotateMotor(OUT_B,90, countmotor);
			                	}
			                	
       	flag_amort=1;
		ResetTachoCount(OUT_B);
		} else {
		NumOut(80, LCD_LINE6, 0);
		}
      
      
				if(((MotorTachoCount(OUT_A)!=0)) && flag_amort2==1 ){    //asservissement du sample pour eviter qu'il ne bouge en bougeant l'analyser

		NumOut(90, LCD_LINE6, 1);

					for(i=1;i<3;i++){
						countmotorM = - MotorTachoCount(OUT_A);
       					RotateMotor(OUT_A,90, countmotorM);
			                	}

       	flag_amort2=0;
		ResetTachoCount(OUT_A);
		} else {
		NumOut(90, LCD_LINE6, 0);
		}
      
      
      
			if(temp1==0){
		TextOut(10, LCD_LINE1, "IN6-TAS MODEL");
		TextOut(40, LCD_LINE2, "ILL");
		TextOut(0, LCD_LINE4, "SELECT MOTOR :");
		TextOut(0, LCD_LINE7, "(G to change and");
		TextOut(10, LCD_LINE8, "D to validate)");
					}


					if (count_m==1 && temp1==0)
					{
						NumOut(90, LCD_LINE4, 1);
						TextOut(0, LCD_LINE5, "                                                                                     ");
						TextOut(10, LCD_LINE5, "MONOCHROMATOR");
					}

					if (count_m==2 && temp1==0)
					{
						NumOut(90, LCD_LINE4, 2);
						TextOut(0, LCD_LINE5, "                                                                                     ");
						TextOut(30, LCD_LINE5, "SAMPLE");
					}
             
				if (count_m==3 && temp1==0)
					{
						NumOut(90, LCD_LINE4, 3);
						TextOut(0, LCD_LINE5, "                                                                                     ");
						TextOut(30, LCD_LINE5, "ANALYZER");
					}





					if(SENSOR_1 == 0){
					flag1=0;
					flag2=0;
					flag11=0;
					flag111=0;
					flag1111=0;
					flag1A=0;
					flag11A=0;
					flag111A=0;
					flag1111A=0;

					}
                   
					if(SENSOR_2 == 0){
					flag3=0;
					flag33=0;
					flag33A=0;
					flagA=0;
					flag333=0;
					flag4=0;
					flag4A=0;

					}
                   
                   
                   
                   
					if(SENSOR_1 == 1 && temp1==0 && flag2==0)   // capteur G activé
						{

						count_m=count_m+1;
						if (count_m>3){        // il y a 3 moteurs
						count_m=1;
						}
						NumOut(90, LCD_LINE4, count_m);

						flag2=1;
				}
                   


							if(SENSOR_2 == 1 && count_m==1 && flag4==0) // Menu monochromateur
								{
										temp1=1;
										menuM=1;
                                       
								TextOut(0, LCD_LINE4, "                                                                                     ");        //efface les lignes de l'ecran
								TextOut(0, LCD_LINE5, "                                                            ");
								TextOut(0, LCD_LINE6, "                                                            ");
								TextOut(0, LCD_LINE7, "                                                            ");
								TextOut(0, LCD_LINE8, "                                                            ");
                                       
								TextOut(0, LCD_LINE4, "MONOCHROMATOR");
								TextOut(30, LCD_LINE5, "ANGLE :");
								TextOut(10, LCD_LINE7, "(G - or D +)");
								TextOut(10, LCD_LINE8, "(G & D finish)")   ;


											if(SENSOR_1 ==1 && flag1==0){                                                                              // Go back to menu     G+D
											TextOut(0, LCD_LINE4, "                                                                                                                   ");         //Erase screen datas
											TextOut(0, LCD_LINE5, "                                                                                                                   ");
											TextOut(0, LCD_LINE6, "                                                                                          ");
											TextOut(0, LCD_LINE7, "                                                                                          ");
											TextOut(0, LCD_LINE8, "                                                                                          ");
											temp1=0;

											flag1=1;
											}

								flag4=1;
								}
                                
                                
								////////////////// Define angle of the Monochromator //////////
                                
                                
								if(menuM==1)
									{
									flag_amort=0; // Analyseur asservi si ca bouge
									flag_positionM=1;
									if(SENSOR_2 == 1)
									{

									angleM=angleM + 0.06;
									TextOut(73, LCD_LINE5, "                                                                                                     ");
									NumOut(73, LCD_LINE5, angleM/2);
                                   
									if(SENSOR_1 ==1 && flag11==0){
													//efface les lignes de l'ecran
											TextOut(0, LCD_LINE5, "                                                                                                    ");

											temp1=0;

											flag11=1;
											menuM=0;
											}
                                   

									}


									if(SENSOR_1 == 1)
									{

									angleM=angleM - 0.06;

									TextOut(73, LCD_LINE5, "                                                                                                     ");
									NumOut(73, LCD_LINE5, angleM/2);
                                   

											if(SENSOR_2 ==1 && flag3==0){
													//efface les lignes de l'écran
											TextOut(0, LCD_LINE5, "                                                                                 ");

											temp1=0;

											flag3=1;
											menuM=0;
											}

									}
                                  
                                  
									if(SENSOR_1 == 1 || SENSOR_2 == 1){
									flagsortieM=0;
									}

									if(SENSOR_1 == 0 && SENSOR_2 == 0 && flagsortieM == 0){

									if((angleM/2-angleM_before/2)>20 || (angleM/2-angleM_before/2)<-20 ){
									RotateMotor(OUT_A,100,(angleM/2-angleM_before/2)/4);
									ResetTachoCount(OUT_A);
									Wait(10);
									RotateMotor(OUT_A,100,(angleM/2-angleM_before/2)/4);
									ResetTachoCount(OUT_A);
									Wait(10);
									RotateMotor(OUT_A,100,(angleM/2-angleM_before/2)/4);
									ResetTachoCount(OUT_A);
									Wait(10);
									RotateMotor(OUT_A,100,(angleM/2-angleM_before/2)/4);
									}
									else{
									RotateMotor(OUT_A,100,(angleM/2-angleM_before/2));
									}
                                  
									positionM = positionM + (angleM/2-angleM_before/2);
									ResetTachoCount(OUT_A);

									flagsortieM=1;
									flagsortieM2=0;
									}

									if (flagsortieM==1&&flagsortieM2==0){
									angleM_before=angleM;
									flagsortieM2=1;
									}
                                  
									}

									///////////////////////////////////////////////////////////////////
                                
                             
                                
                                
                                
                                
                                
                                
                                
                                
                                
									if(SENSOR_2 == 1 && count_m==2 && flag4==0 && flag_positionM==1) // menu du Sample
								{


									flag_positionS=1;
										temp1=1;
										menuS=1;

								TextOut(0, LCD_LINE4, "                                                            ");             
								TextOut(0, LCD_LINE5, "                                                            ");
								TextOut(0, LCD_LINE6, "                                                            ");
								TextOut(0, LCD_LINE7, "                                                            ");
								TextOut(0, LCD_LINE8, "                                                            ");

								TextOut(30, LCD_LINE4, "SAMPLE");
								TextOut(30, LCD_LINE5, "ANGLE :");
								TextOut(10, LCD_LINE7, "(G - or D +)");
								TextOut(10, LCD_LINE8, "(G & D finish)");
                                
								if(SENSOR_1 ==1 && flag1=1){                                                                                   //  G+D retour au menu principal
								TextOut(0, LCD_LINE4, "                                                            ");              
								TextOut(0, LCD_LINE5, "                                                            ");
								TextOut(0, LCD_LINE6, "                                                            ");
								TextOut(0, LCD_LINE7, "                                                            ");
								TextOut(0, LCD_LINE8, "                                                            ");
								temp1=0;
									flag1=1;
								}
									flag4=1;
								}
                                
                                
                                
							////////////////// Définition de l'angle du sample //////////


								if(menuS==1)
									{
									flag_amort2=1;

									if(SENSOR_2 == 1)
									{

									angleS=angleS + 0.015;

									TextOut(73, LCD_LINE5, "                                                                                                     ");
									NumOut(73, LCD_LINE5, angleS*2);


									if(SENSOR_1 ==1 && flag11==0){
													
											TextOut(0, LCD_LINE5, "                                                                                                     ");
											flag11=1;
											menuS=0;
											temp1=0;

											}
									}


									if(SENSOR_1 == 1)
									{

									angleS=angleS - 0.015;

									TextOut(73, LCD_LINE5, "                                                                                                     ");
									NumOut(73, LCD_LINE5, angleS*2);

                                    
											if(SENSOR_2 ==1 && flag3==0){

													
											TextOut(0, LCD_LINE5, "                                                                                 ");

											temp1=0;
											flag3=1;
											menuS=0;
											}


									}
                                  
									if(SENSOR_1 == 1 || SENSOR_2 == 1){
									flagsortie=0;
									}

									if(SENSOR_1 == 0 && SENSOR_2 == 0 && flagsortie == 0){
                                  
									if((angleS-angleS_before)>20 || (angleS-angleS_before)<-20){
									RotateMotor(OUT_B,100,(angleS-angleS_before)/4);
									ResetTachoCount(OUT_B);
									Wait(10);
									RotateMotor(OUT_B,100,(angleS-angleS_before)/4);
									ResetTachoCount(OUT_B);
									Wait(10);
									RotateMotor(OUT_B,100,(angleS-angleS_before)/4);
									ResetTachoCount(OUT_B);
									Wait(10);
									RotateMotor(OUT_B,100,(angleS-angleS_before)/4);
									}
									else{
									RotateMotor(OUT_B,100,(angleS-angleS_before));
									}

									positionS = positionS + (angleS-angleS_before);
									ResetTachoCount(OUT_B);

									flagsortie=1;
									flagsortie2=0;
									}
                                  
									if (flagsortie==1&&flagsortie2==0){
									angleS_before=angleS;
									flagsortie2=1;
									}


									}

									///////////////////////////////////////////////////////////////////





                                   
                                
								if(SENSOR_2 == 1 && count_m==3 && flag4==0 && flag_positionS==1) // menu de l'analyseur
								{
										temp1=1;
										menuA=1;
                                       
								TextOut(0, LCD_LINE4, "                                                                                    ");          
								TextOut(0, LCD_LINE5, "                                                                                    ");
								TextOut(0, LCD_LINE6, "                                                                                    ");
								TextOut(0, LCD_LINE7, "                                                                                    ");
								TextOut(0, LCD_LINE8, "                                                                                    ");

								TextOut(0, LCD_LINE4, "ANALYZER");
								TextOut(30, LCD_LINE5, "ANGLE :");
								TextOut(10, LCD_LINE7, "(G - or D +)");
								TextOut(10, LCD_LINE8, "(G & D finish)")   ;

								if(SENSOR_1 ==1 && flag1==0){                                                                                   //  G+D retour au menu principal
								TextOut(0, LCD_LINE4, "                                                                                    ");        
								TextOut(0, LCD_LINE5, "                                                                                    ");
								TextOut(0, LCD_LINE6, "                                                                                    ");
								TextOut(0, LCD_LINE7, "                                                                                    ");
								TextOut(0, LCD_LINE8, "                                                                                    ");

								temp1=0;
								flag1=1;

								}
								flag4=1;
								}
                                





								////////////////// Définition de l'angle de l'analyseur //////////


								if(menuA==1)
									{
											flag_positionA=1;


									if(SENSOR_2 == 1)
									{

									angleA=angleA + 0.03;
                                  
                   
									TextOut(73, LCD_LINE5, "                                                                                        ");
									NumOut(73, LCD_LINE5, angleA);

									if(SENSOR_1 ==1 && flag111A==0){
													
											TextOut(0, LCD_LINE5, "                                                                                ");

											temp1=0;
											flag111A=1;
											menuA=0;
											}


									}


									if(SENSOR_1 == 1)
									{

									angleA=angleA - 0.03;

                    
                                   
									TextOut(73, LCD_LINE5, "                                                                                         ");
									NumOut(73, LCD_LINE5, angleA);

											if(SENSOR_2 ==1 && flagA==0){
													
											TextOut(0, LCD_LINE5, "                                                                                 ");

											temp1=0;
											flagA=1;
											menuA=0;
											}
                                            
										}


 					if(SENSOR_1 == 1 || SENSOR_2 == 1){
									flagsortieA=0;
									}

									if(SENSOR_1 == 0 && SENSOR_2 == 0 && flagsortieA == 0){
                                  
                                   
                                   
									RotateMotor(OUT_C,100,angleA-angleA_before);

									ResetTachoCount(OUT_C);

									flagsortieA=1;
									flagsortieA2=0;
									}
                                  
									if (flagsortieA==1&&flagsortieA2==0){
									angleA_before=angleA;
									flagsortieA2=1;
									}

									}
									}

						/////////////////////////////////////////////////////////////////////


		}

}
